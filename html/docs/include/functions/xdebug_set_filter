= xdebug_set_filter
Set filter
void
int $group, int $listType, array $configuration
FUNC_CODE_COVERAGE

TXT:
This function configures a filter that Xdebug employs when displaying stack
traces or recording function traces, or when gathering code coverage. Filter
configurations are applied to each execution unit (function, method, script
body) independently.

TXT:
The first argument, <code>$group</code> selects for which feature you want to
set up a filter. Currently there are two groups:

<dl>
<dt>XDEBUG_FILTER_CODE_COVERAGE</dt>
<dd>The filter group used for restricting the file paths which Xdebug would use
for [FEAT:code_coverage].</dd>

<dt>XDEBUG_FILTER_STACK</dt>
<dd>The filter group used for filtering a [FEAT:develop#stack_trace] upon errors.</dd>

<dt>XDEBUG_FILTER_TRACING</dt>
<dd>The filter group used for filtering elements in a [FEAT:trace].</dd>
</dl>

Each group can be configured independently.

TXT:
There are different kinds of filters that you can set. You can filter on either
file path prefix, or fully qualified class name prefix (i.e. namespace). For
each filter type you can a list of paths/namespaces to include or exclude. All
matches are done in a case-insensitive way.

TXT:
The <code>XDEBUG_FILTER_CODE_COVERAGE</code> group only supports
<code>XDEBUG_PATH_INCLUDE</code>, <code>XDEBUG_PATH_EXCLUDE</code>, and
<code>XDEBUG_FILTER_NONE</code>. All matches are done in a case-insensitive
way.

TXT:
The constants to use as second "<code>$list_type</code>" argument are:

<dl>
<dt>XDEBUG_PATH_INCLUDE</dt>
<dd><p>Configures a list of file paths to include. An execution unit is
included in the output if its file path is prefixed by any of the prefixes in
the array passed as third <code>$configuration</code> argument.</p><p>Please
note that a prefix of <code>/home/derick</code> would also match files in
<code>/home/derickrethans</code>, so it is recommended that you add the
trailing slash to the prefix in order to prevent this.</p></dd>

<dt>XDEBUG_PATH_EXCLUDE</dt>
<dd><p>Sets up a list of paths to exclude. An execution unit will be excluded
from the output if its file path is prefixed by any of the prefixes from the
<code>$configuration</code> array.</p></dd>

<dt>XDEBUG_NAMESPACE_INCLUDE</dt>
<dd><p>Configures a list of class name prefixes to include. An execution unit is included in
the output if the class name, after namespace expansion, matches one of the
prefixes in the <code>$configuration</code> array. An empty string value is
special, and means functions that do not belong to a class. These are either
user-defined, or built-in PHP functions (e.g. <code>strlen()</code>).</p>
<p>Name space expansion happens automatically in PHP, and its engine will
always see the full qualified class name. In the code below, the
fully qualified class name <code>DramIO\Whisky</code>:

EXAMPLE:
<?php
namespace DramIO;

class Whisky {
}

TXT:
<p>
In order to match for all clases within a namespace, it is recommended to specify the prefix with the namespace separator
</p></dd>

<dt>XDEBUG_NAMESPACE_EXCLUDE</dt>
<dd>Sets up a list of namespaces to exclude. Execution units are excluded only
if their prefix matches one of the prefixes in the <code>$configuration</code>
array.</dd>

<dt>XDEBUG_FILTER_NONE</dt>
<dd>Turns off the filter for the selected <code>$group</code>.</dd>
</dl>

TXT:
It is not possible to configure a filter for paths/namespaces at the same time,
and neither is it possible to configure which paths to exclude and include at
the same time. Only one of the four list types can be active at any one time.

It is possible however, to turn off the filter altogether by using
<code>XDEBUG_FILTER_NONE</code>.

TXT:
To exclude all files in the <code>vendor</code> sub-directory in traces:

EXAMPLE:
<?php
xdebug_set_filter( XDEBUG_FILTER_TRACING, XDEBUG_PATH_EXCLUDE, [ __DIR__ . "/vendor/" ] );
?>

TXT:
To include only function calls (without class name), and methods calls for the
<code>ezc</code> and <code>DramIO\</code> classes in traces:

EXAMPLE:
<?php
xdebug_set_filter( XDEBUG_FILTER_TRACING, XDEBUG_NAMESPACE_INCLUDE, [ "", "ezc", "DramIO\\" ] );
?>

TXT:
To only perform code-coverage analysis for files in the <code>src</code> sub-directory:

EXAMPLE:
<?php
xdebug_set_filter( XDEBUG_FILTER_CODE_COVERAGE, XDEBUG_PATH_INCLUDE, [ __DIR__ . "/src/" ] );
?>
